1:"$Sreact.fragment"
2:I[9119,["119","static/chunks/119-2ee48d1f375d3fd9.js","974","static/chunks/app/page-ee49d1414c09869d.js"],""]
3:I[730,[],""]
4:I[2392,[],""]
6:I[3811,[],"OutletBoundary"]
8:I[4338,[],"AsyncMetadataOutlet"]
a:I[3811,[],"ViewportBoundary"]
c:I[3811,[],"MetadataBoundary"]
d:"$Sreact.suspense"
f:I[9426,[],""]
:HL["/_next/static/css/5e22d3fe14facb50.css","style"]
0:{"P":null,"b":"nvFx_FV4eLnf8EmFzYlmi","p":"","c":["","docs","20190829090000"],"i":false,"f":[[["",{"children":["docs",{"children":[["slug","20190829090000","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5e22d3fe14facb50.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"ja","children":["$","body",null,{"style":{"backgroundColor":"ghostwhite","margin":0,"minHeight":"100vh"},"children":[["$","header",null,{"style":{"padding":"1rem 0","marginBottom":"0.25rem"},"children":["$","div",null,{"style":{"maxWidth":"1000px","margin":"0 auto","padding":"0 2rem"},"children":["$","$L2",null,{"href":"/","style":{"fontSize":"1.5rem","fontWeight":"bold","textDecoration":"none","color":"#333"},"children":"MyDocs"}]}]}],["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}]}]]}],{"children":["docs",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","20190829090000","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",null,["$","$L6",null,{"children":["$L7",["$","$L8",null,{"promise":"$@9"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$La",null,{"children":"$Lb"}],null],["$","$Lc",null,{"children":["$","div",null,{"hidden":true,"children":["$","$d",null,{"fallback":null,"children":"$Le"}]}]}]]}],false]],"m":"$undefined","G":["$f",[]],"s":false,"S":true}
10:T1596,<h2>ディレクトリ構成</h2>
<pre><code class="hljs language-bash">./
├── Dockerfile
├── docker-compose.yml
├── db_volume/
├── mysql-confd/
│   └── default_authentication.cnf
└── src/
    ├── Gemfile
    └── Gemfile.lock
</code></pre>
<h2>ファイルの説明</h2>
<h3>Dockerfile</h3>
<p>Rails のアプリ用の Dockerfile を定義する。
MySQL と連携するために mysql-client をインストールしている。</p>
<pre><code class="hljs language-Dockerfile">FROM ruby:latest

RUN apt-get update -qq &#x26;&#x26; \
    apt-get install -y build-essential &#x26;&#x26; \
    apt-get install -y libpq-dev &#x26;&#x26; \
    apt-get install -y mysql-client &#x26;&#x26; \
    apt-get install -y nodejs

RUN mkdir /myapp
ENV APP_ROOT /myapp
WORKDIR $APP_ROOT
ADD ./src/Gemfile $APP_ROOT/Gemfile
ADD ./src/Gemfile.lock $APP_ROOT/Gemfile.lock

RUN bundle install
ADD ./src/ $APP_ROOT
</code></pre>
<h3>docker-compose</h3>
<p>MySQL のバージョンが 8 以上だと認証でエラーになるので設定ファイルをにマウントする。
また <code>./db_volume:/var/lib/mysql</code> で DB を永続化している。</p>
<p><a href="https://qiita.com/yensaki/items/9e453b7320ca2d0461c7">参考</a></p>
<pre><code class="hljs language-yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">'3'</span>
<span class="hljs-attr">services:</span>
  <span class="hljs-attr">db:</span>
    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:latest</span>
    <span class="hljs-attr">volumes:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">./mysql-confd:/etc/mysql/conf.d</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">./db_volume:/var/lib/mysql</span>
    <span class="hljs-attr">environment:</span>
      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">root</span>
      <span class="hljs-attr">MYSQL_DATABASE:</span> <span class="hljs-string">root</span>
    <span class="hljs-attr">ports:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">"3306:3306"</span>

  <span class="hljs-attr">web:</span>
    <span class="hljs-attr">build:</span> <span class="hljs-string">.</span>
    <span class="hljs-attr">command:</span> <span class="hljs-string">bundle</span> <span class="hljs-string">exec</span> <span class="hljs-string">rails</span> <span class="hljs-string">s</span> <span class="hljs-string">-p</span> <span class="hljs-number">3000</span> <span class="hljs-string">-b</span> <span class="hljs-string">'0.0.0.0'</span>
    <span class="hljs-attr">volumes:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">./src:/myapp</span>
    <span class="hljs-attr">ports:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">"3000:3000"</span>
    <span class="hljs-attr">links:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">db</span>
</code></pre>
<h3>default_authentication.cnf</h3>
<p>認証用の設定ファイル。</p>
<pre><code class="hljs language-default_authentication.cnf">[mysqld]
default_authentication_plugin= mysql_native_password
</code></pre>
<h3>Gemfile</h3>
<pre><code class="hljs language-Gemfile">source 'https://rubygems.org'
gem 'rails', '5.1.6'
</code></pre>
<p>Gemfile.lock も作成しておく ( 中身は空 ) 。</p>
<pre><code class="hljs language-bash">$ <span class="hljs-built_in">touch</span> ./src/Gemfile.lock
</code></pre>
<h2>プロジェクトの構築</h2>
<pre><code class="hljs language-bash">$ docker-compose run web rails new . --force --database=mysql --skip-bundle
</code></pre>
<p><code>--skip-bundle</code> で gem のインストールを回避。
実行後 <code>./src</code> 配下に新しいアプリケーションが作成されている。</p>
<h2>データベースに接続</h2>
<p><code>./src/config/database.yml</code> の password と host を docker-compose で定義した内容に変更。</p>
<pre><code class="hljs language-yaml"><span class="hljs-attr">default:</span> <span class="hljs-meta">&#x26;default</span>
  <span class="hljs-attr">adapter:</span> <span class="hljs-string">mysql2</span>
  <span class="hljs-attr">encoding:</span> <span class="hljs-string">utf8</span>
  <span class="hljs-attr">pool:</span> &#x3C;%=<span class="ruby"> <span class="hljs-variable constant_">ENV</span>.fetch(<span class="hljs-string">"RAILS_MAX_THREADS"</span>) { <span class="hljs-number">5</span> } </span>%>
  <span class="hljs-attr">username:</span> <span class="hljs-string">root</span>
  <span class="hljs-attr">password:</span> <span class="hljs-string">root</span>
  <span class="hljs-attr">host:</span> <span class="hljs-string">db</span>
</code></pre>
<h2>dockerの起動</h2>
<p>ビルド。</p>
<pre><code class="hljs language-bash">$ docker-compose build
</code></pre>
<p>起動。</p>
<pre><code class="hljs language-bash">$ docker-compose up
</code></pre>
<h2>DBの作成</h2>
<pre><code class="hljs language-bash">$ docker-compose run web rails db:create
</code></pre>
<h2>確認</h2>
<p>ブラウザで localhost:3000 にアクセス。</p>
<p>Rails のコンテナにアクセスして DB との接続確認。</p>
<pre><code class="hljs language-bash">$ docker <span class="hljs-built_in">exec</span> -it コンテナID /bin/bash
</code></pre>
<p>接続したコンテナから DB に接続。</p>
<pre><code class="hljs language-bash">$ rails dbconsole
</code></pre>5:["$","article",null,{"style":{"maxWidth":"1000px","margin":"0 auto","padding":"0 2rem 2rem"},"children":[["$","h1",null,{"children":"docker-composeでRailsとMysqlを使う"}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$10"}}]]}]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
7:null
9:{"metadata":[["$","title","0",{"children":"MyDocs"}],["$","meta","1",{"name":"description","content":"A simple SSG blog built with Next.js"}]],"error":null,"digest":"$undefined"}
e:"$9:metadata"
