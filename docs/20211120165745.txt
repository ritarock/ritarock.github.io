1:"$Sreact.fragment"
2:I[9119,["119","static/chunks/119-2ee48d1f375d3fd9.js","974","static/chunks/app/page-ee49d1414c09869d.js"],""]
3:I[730,[],""]
4:I[2392,[],""]
6:I[3811,[],"OutletBoundary"]
8:I[4338,[],"AsyncMetadataOutlet"]
a:I[3811,[],"ViewportBoundary"]
c:I[3811,[],"MetadataBoundary"]
d:"$Sreact.suspense"
f:I[9426,[],""]
:HL["/_next/static/css/5e22d3fe14facb50.css","style"]
0:{"P":null,"b":"OVt0H6to9QSgb-YS8ef-u","p":"","c":["","docs","20211120165745"],"i":false,"f":[[["",{"children":["docs",{"children":[["slug","20211120165745","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5e22d3fe14facb50.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"ja","children":["$","body",null,{"style":{"backgroundColor":"ghostwhite","margin":0,"minHeight":"100vh"},"children":[["$","header",null,{"style":{"padding":"1rem 0","marginBottom":"0.25rem"},"children":["$","div",null,{"style":{"maxWidth":"1000px","margin":"0 auto","padding":"0 2rem"},"children":["$","$L2",null,{"href":"/","style":{"fontSize":"1.5rem","fontWeight":"bold","textDecoration":"none","color":"#333"},"children":"MyDocs"}]}]}],["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}]}]]}],{"children":["docs",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","20211120165745","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",null,["$","$L6",null,{"children":["$L7",["$","$L8",null,{"promise":"$@9"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$La",null,{"children":"$Lb"}],null],["$","$Lc",null,{"children":["$","div",null,{"hidden":true,"children":["$","$d",null,{"fallback":null,"children":"$Le"}]}]}]]}],false]],"m":"$undefined","G":["$f",[]],"s":false,"S":true}
10:Te0b,<p><a href="https://github.com/rubenv/sql-migrate">https://github.com/rubenv/sql-migrate</a> を試してみた。</p>
<h2>docker で試す</h2>
<p>通常のアプリを起動する <code>docker-compose.yml</code> とは別に <code>docker-compose.migration.yml</code> を用意した。</p>
<pre><code class="hljs language-yml"><span class="hljs-attr">version:</span> <span class="hljs-string">'3'</span>
<span class="hljs-attr">services:</span>
  <span class="hljs-attr">db:</span>
    <span class="hljs-attr">build:</span>
      <span class="hljs-attr">context:</span> <span class="hljs-string">./docker/database</span>
    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span>
    <span class="hljs-attr">environment:</span>
      <span class="hljs-attr">MYSQL_DATABASE:</span> <span class="hljs-string">app</span>
      <span class="hljs-attr">MYSQL_USER:</span> <span class="hljs-string">user</span>
      <span class="hljs-attr">MYSQL_PASSWORD:</span> <span class="hljs-string">pass</span>
      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">pass</span>
    <span class="hljs-attr">ports:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-number">3306</span><span class="hljs-string">:3306</span>
    <span class="hljs-attr">volumes:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">./docker/database/mysql:/var/lib/mysql</span>
  <span class="hljs-attr">migration:</span>
    <span class="hljs-attr">build:</span>
      <span class="hljs-attr">context:</span> <span class="hljs-string">./docker/migration</span>
    <span class="hljs-attr">volumes:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">./migrations:/work</span>
    <span class="hljs-attr">depends_on:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">db</span>
</code></pre>
<p>migration 用の Dockerfile はこんな感じ。</p>
<pre><code class="hljs language-Dockerfile">FROM golang:1.17.3

WORKDIR /work
RUN go get -v github.com/rubenv/sql-migrate/...
</code></pre>
<p>migration コンテナにマウントしてる <code>./migrations</code> にはマイグレーション用の SQL と <code>dbconfig.yml</code> を置いている。</p>
<p><code>dbconfig.yml</code> では接続する DB の設定を書いておく。</p>
<pre><code class="hljs language-yml"><span class="hljs-attr">development:</span>
    <span class="hljs-attr">dialect:</span> <span class="hljs-string">mysql</span>
    <span class="hljs-attr">datasource:</span> <span class="hljs-string">user:pass@tcp(db:3306)/app?parseTime=true</span>
    <span class="hljs-attr">dir:</span> <span class="hljs-string">.</span>
</code></pre>
<p>また sql ファイルには <code>-- +migrate Up</code> と <code>-- +migrate Down</code> の記述が必要。</p>
<pre><code class="hljs language-sql"><span class="hljs-comment">-- +migrate Up</span>
<span class="hljs-keyword">CREATE TABLE</span> topics (
  id <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>),
  title <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>),
  detail <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>)
);

<span class="hljs-comment">-- +migrate Down</span>
<span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> topics;
</code></pre>
<h2>実行</h2>
<pre><code class="hljs language-bash">$ docker-compose -f docker-compose.migration.yml run migration bash
$ sql-migrate up
</code></pre>5:["$","article",null,{"style":{"maxWidth":"1000px","margin":"0 auto","padding":"0 2rem 2rem"},"children":[["$","h1",null,{"children":"sql-migrateを試す"}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$10"}}]]}]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
7:null
9:{"metadata":[["$","title","0",{"children":"MyDocs"}],["$","meta","1",{"name":"description","content":"A simple SSG blog built with Next.js"}]],"error":null,"digest":"$undefined"}
e:"$9:metadata"
