1:"$Sreact.fragment"
2:I[9119,["119","static/chunks/119-2ee48d1f375d3fd9.js","974","static/chunks/app/page-ee49d1414c09869d.js"],""]
3:I[730,[],""]
4:I[2392,[],""]
6:I[3811,[],"OutletBoundary"]
8:I[4338,[],"AsyncMetadataOutlet"]
a:I[3811,[],"ViewportBoundary"]
c:I[3811,[],"MetadataBoundary"]
d:"$Sreact.suspense"
f:I[9426,[],""]
:HL["/_next/static/css/5e22d3fe14facb50.css","style"]
0:{"P":null,"b":"OVt0H6to9QSgb-YS8ef-u","p":"","c":["","docs","20200504145305"],"i":false,"f":[[["",{"children":["docs",{"children":[["slug","20200504145305","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5e22d3fe14facb50.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"ja","children":["$","body",null,{"style":{"backgroundColor":"ghostwhite","margin":0,"minHeight":"100vh"},"children":[["$","header",null,{"style":{"padding":"1rem 0","marginBottom":"0.25rem"},"children":["$","div",null,{"style":{"maxWidth":"1000px","margin":"0 auto","padding":"0 2rem"},"children":["$","$L2",null,{"href":"/","style":{"fontSize":"1.5rem","fontWeight":"bold","textDecoration":"none","color":"#333"},"children":"MyDocs"}]}]}],["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}]}]]}],{"children":["docs",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","20200504145305","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",null,["$","$L6",null,{"children":["$L7",["$","$L8",null,{"promise":"$@9"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$La",null,{"children":"$Lb"}],null],["$","$Lc",null,{"children":["$","div",null,{"hidden":true,"children":["$","$d",null,{"fallback":null,"children":"$Le"}]}]}]]}],false]],"m":"$undefined","G":["$f",[]],"s":false,"S":true}
10:Ta06,<h2>入出力</h2>
<h3>単一数値、文字</h3>
<pre><code class="hljs language-go"><span class="hljs-keyword">var</span> N <span class="hljs-type">int</span>
fmt.Scan(&#x26;N)
fmt.Println(N)

<span class="hljs-keyword">var</span> s <span class="hljs-type">string</span>
fmt.Scan(&#x26;s)
fmt.Println(s)
</code></pre>
<h3>文字列、数列群をスライスで返す</h3>
<pre><code class="hljs language-go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">scanStrings</span><span class="hljs-params">(<span class="hljs-built_in">len</span> <span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">string</span> {
  <span class="hljs-keyword">var</span> str <span class="hljs-type">string</span>
  <span class="hljs-keyword">var</span> strs []<span class="hljs-type">string</span>
  <span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &#x3C; <span class="hljs-built_in">len</span>; i++ {
    fmt.Scanf(<span class="hljs-string">"%s"</span>, &#x26;str)
    strs = <span class="hljs-built_in">append</span>(strs, str)
  }
  <span class="hljs-keyword">return</span> strings
}

<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">scanNums</span><span class="hljs-params">(<span class="hljs-built_in">len</span> <span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">int</span> {
  <span class="hljs-keyword">var</span> num <span class="hljs-type">int</span>
  <span class="hljs-keyword">var</span> nums []<span class="hljs-type">int</span>
  <span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &#x3C; <span class="hljs-built_in">len</span>; i ++ {
    fmt.Scan(&#x26;num)
    nums = <span class="hljs-built_in">append</span>(nums, num)
  }
  <span class="hljs-keyword">return</span> nums
}
</code></pre>
<h3>与えられた列をスライスで返す</h3>
<pre><code class="hljs language-go">n := <span class="hljs-number">3</span>
arr := <span class="hljs-built_in">make</span>([]<span class="hljs-type">int</span>, n)

<span class="hljs-keyword">for</span> i:= <span class="hljs-number">0</span>; i &#x3C; n; i ++ {
  fmt.Scan(&#x26;arr[i])
}
</code></pre>
<h2>n 回繰り返す</h2>
<pre><code class="hljs language-go">n := <span class="hljs-number">3</span>

<span class="hljs-keyword">for</span> <span class="hljs-keyword">range</span>(<span class="hljs-built_in">make</span>([]<span class="hljs-type">int</span>, n)) {
  <span class="hljs-comment">// 処理</span>
}
</code></pre>5:["$","article",null,{"style":{"maxWidth":"1000px","margin":"0 auto","padding":"0 2rem 2rem"},"children":[["$","h1",null,{"children":"Golangでatcorderの入出力とか繰り返しとか"}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$10"}}]]}]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
7:null
9:{"metadata":[["$","title","0",{"children":"MyDocs"}],["$","meta","1",{"name":"description","content":"A simple SSG blog built with Next.js"}]],"error":null,"digest":"$undefined"}
e:"$9:metadata"
